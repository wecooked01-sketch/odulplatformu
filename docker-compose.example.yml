version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: odulplatformu_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: odulplatformu
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: odulplatformu_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/odulplatformu?schema=public
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
      - EMAIL_SERVER_HOST=smtp.mailtrap.io
      - EMAIL_SERVER_PORT=2525
      - EMAIL_SERVER_USER=your-mailtrap-user
      - EMAIL_SERVER_PASSWORD=your-mailtrap-password
      - EMAIL_FROM=noreply@odulplatformu.com
      - DISABLE_EMAIL_SENDING=true
      - TELEGRAM_BOT_TOKEN=your-telegram-bot-token-here
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount for development (optional)
      # - .:/app
      # - /app/node_modules
      # - /app/.next
      pass: []

volumes:
  postgres_data:

networks:
  default:
    name: odulplatformu_network